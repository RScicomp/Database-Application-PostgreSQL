DROP TABLE t_Banks CASCADE;
DROP TABLE t_Branches CASCADE;
DROP TABLE t_Bankers CASCADE;
DROP TABLE t_Customers CASCADE;
DROP TABLE t_Savings CASCADE;
DROP TABLE t_Transactions CASCADE;
DROP TABLE t_Withdrawals CASCADE;
DROP TABLE t_Deposits CASCADE;
DROP TABLE t_Accounts CASCADE;
DROP TABLE t_Transfers CASCADE;

--Institutions
-- missing attributes: reserveAmt , countryHQ

CREATE TABLE t_Banks(
nameB VARCHAR(20) NOT NULL,

PRIMARY KEY(nameB)
);

CREATE TABLE t_Branches(
brID INTEGER NOT NULL,
nameB VARCHAR(20) NOT NULL,
city VARCHAR(20) NOT NULL,

PRIMARY KEY(brID, nameB),
FOREIGN KEY(nameB) REFERENCES t_Banks
);

--People

CREATE TABLE t_Bankers(
pidB INTEGER NOT NULL,		
brID INTEGER NOT NULL,
nameB VARCHAR(20) NOT NULL,
addr VARCHAR(30),
name VARCHAR(20),
phoneNum INTEGER,

PRIMARY KEY (pidB),
FOREIGN KEY(brID, nameB) REFERENCES t_Branches(brID, nameB)
);

CREATE TABLE t_Customers(
pidC INTEGER NOT NULL,
pidB INTEGER NOT NULL,
addr VARCHAR(30),
name VARCHAR(20),
phoneNum INTEGER,

PRIMARY KEY(pidC),
FOREIGN KEY(pidB) REFERENCES t_Bankers(pidB)
);

--Accounts
CREATE TABLE t_Accounts(
aID INTEGER NOT NULL,
currency VARCHAR(3) NOT NULL,
openDate DATE NOT NULL,
balance INTEGER NOT NULL,	-- Assume balance <= 10,000,000
nameB VARCHAR(20) NOT NULL,
pidC INTEGER NOT NULL,
pidB INTEGER NOT NULL,
checking BOOLEAN NOT NULL,		-- true : checking & false : saving 
interestRate INTEGER,		-- Similar to balance, INT is more lightweight

PRIMARY KEY(aID),
FOREIGN KEY(pidB) REFERENCES t_Bankers(pidB),
FOREIGN KEY(pidC) REFERENCES t_Customers(pidC),
FOREIGN KEY(nameB) REFERENCES t_Banks(nameB)
);


--Transactions

CREATE TABLE t_Transactions(
tID INTEGER NOT NULL,
dateOf DATE NOT NULL,
timeOf TIME NOT NULL, 
amt INTEGER NOT NULL,
statusOf INT NOT NULL,	

PRIMARY KEY(tID)
);


--Withdrawals
CREATE TABLE t_Withdrawals(
tidW INTEGER NOT NULL,
aidC INTEGER NOT NULL,

PRIMARY KEY(tidW),
FOREIGN KEY(tidW) REFERENCES t_Transactions(tID),
FOREIGN KEY(aidC) REFERENCES t_Accounts(aID)
);

-- Deposits
CREATE TABLE t_Deposits(
tidD INTEGER NOT NULL,
aID INTEGER NOT NULL,

PRIMARY KEY(tidD),
FOREIGN KEY(tidD) REFERENCES t_Transactions(tID),
FOREIGN KEY(aID) REFERENCES t_Accounts(aID)
);


--Transfers
CREATE TABLE t_Transfers(
tidT INTEGER NOT NULL,
aidSrc INTEGER NOT NULL,
aidDest INTEGER NOT NULL,
fee INTEGER NOT NULL,

PRIMARY KEY(tidT),
FOREIGN KEY(tidT) REFERENCES t_Transactions(tID),
FOREIGN KEY(aidSrc) REFERENCES t_Accounts(aID),
FOREIGN KEY (aidDest) REFERENCES t_Accounts(aID)
);







